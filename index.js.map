{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '19197868-48df692c0a14d7fda4172233f';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nexport default class PicturesApiService {\n  constructor() {\n    this.searchQuery = '';\n  }\n\n  async fetchPictures() {\n    const { data } = await axios.get(\n      `/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&safesearch=true&key=${API_KEY}`\n    );\n\n    if (data.total === 0) {\n      throw 'Images not found';\n    }\n    this.page += 1;\n\n    return data.hits;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newSearchQuery) {\n    this.searchQuery = newSearchQuery;\n  }\n}\n","export function renderCard(data) {\n  const {\n    webformatURL,\n    largeImageURL,\n    likes,\n    views,\n    comments,\n    downloads,\n    tags,\n  } = data;\n\n  return `<li class=\"photo-card\">\n    <a class=\"gallery__link\" href=\"${largeImageURL}\">\n      <img class=\"images\" src=\"${webformatURL}\" alt=\"${tags}\" height=\"200\" />\n    </a>\n    <div class=\"stats\">\n        <p class=\"stats-item\">\n            <i class=\"material-icons\">thumb_up</i>\n            ${likes}\n        </p>\n        <p class=\"stats-item\">\n            <i class=\"material-icons\">visibility</i>\n            ${views}\n        </p>\n        <p class=\"stats-item\">\n            <i class=\"material-icons\">comment</i>\n            ${comments}\n        </p>\n        <p class=\"stats-item\">\n            <i class=\"material-icons\">cloud_download</i>\n            ${downloads}\n        </p>\n    </div>\n</li>`;\n}\n","import PicturesApiService from './js/pixabay-api';\nimport { renderCard } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  searchForm: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  galleryItem: document.querySelector('.photo-card'),\n};\n\n\nrefs.searchForm.addEventListener('submit', onSearch);\nrefs.gallery.addEventListener('click', onImageClick);\n\nfunction onImageClick(event) {\n  if (event.target.nodeName !== 'IMG') {\n    return;\n  }\n}\n\nconst picturesApiService = new PicturesApiService();\n\nfunction onSearch(e) {\n  e.preventDefault();\n  clearPictureGallery();\n  picturesApiService.query = e.currentTarget.elements.query.value.trim();\n\n  console.log('picturesApiService.query : ', picturesApiService.query)\n\n  if (picturesApiService.query === '') {\n    iziToast.show({\n      title: 'Error',\n      message: 'Please enter text!',\n      position: 'topCenter',\n      color: 'red',\n    });\n\n    return\n  }\n\n  fetchPictures();\n}\n\nfunction appendPicturesMarkup(pictures) {\n  const html = pictures.map(picture => {\n    return renderCard(picture);\n  });\n  refs.gallery.insertAdjacentHTML('beforeend', html.join(''));\n\n  new SimpleLightbox('.gallery a', {\n    caption: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n\nfunction clearPictureGallery() {\n  refs.gallery.innerHTML = '';\n}\n\nasync function fetchPictures() {\n\n  try {\n    const pictures = await picturesApiService.fetchPictures();\n    appendPicturesMarkup(pictures);\n  } catch (er) {\n    errors(er);\n  }\n}\n\nfunction errors(er) {\n  if (er === 'Images not found') {\n    iziToast.show({\n      title: 'Error',\n      message: 'Sorry, there are no images matching your search query. Please try again!',\n      position: 'topCenter',\n      color: 'red',\n    });\n\n    return;\n  }\n\n  iziToast.show({\n      title: 'Error',\n      message: 'Error! Failed to upload images',\n      position: 'topCenter',\n      color: 'red',\n  });\n}\n"],"names":["API_KEY","axios","PicturesApiService","data","newSearchQuery","renderCard","webformatURL","largeImageURL","likes","views","comments","downloads","tags","refs","onSearch","onImageClick","event","picturesApiService","e","clearPictureGallery","iziToast","fetchPictures","appendPicturesMarkup","pictures","html","picture","SimpleLightbox","er","errors"],"mappings":"owBAEA,MAAMA,EAAU,qCAEhBC,EAAM,SAAS,QAAU,0BAEV,MAAMC,CAAmB,CACtC,aAAc,CACZ,KAAK,YAAc,EACpB,CAED,MAAM,eAAgB,CACpB,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMF,EAAM,IAC3B,+CAA+C,KAAK,WAAW,wBAAwBD,CAAO,EACpG,EAEI,GAAIG,EAAK,QAAU,EACjB,KAAM,mBAER,YAAK,MAAQ,EAENA,EAAK,IACb,CAED,IAAI,OAAQ,CACV,OAAO,KAAK,WACb,CACD,IAAI,MAAMC,EAAgB,CACxB,KAAK,YAAcA,CACpB,CACH,CC9BO,SAASC,EAAWF,EAAM,CAC/B,KAAM,CACJ,aAAAG,EACA,cAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,KAAAC,CACD,EAAGT,EAEJ,MAAO;AAAA,qCAC4BI,CAAa;AAAA,iCACjBD,CAAY,UAAUM,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,cAK7CJ,CAAK;AAAA;AAAA;AAAA;AAAA,cAILC,CAAK;AAAA;AAAA;AAAA;AAAA,cAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,cAIRC,CAAS;AAAA;AAAA;AAAA,MAIvB,CC3BA,MAAME,EAAO,CACX,WAAY,SAAS,cAAc,cAAc,EACjD,QAAS,SAAS,cAAc,UAAU,EAC1C,YAAa,SAAS,cAAc,aAAa,CACnD,EAGAA,EAAK,WAAW,iBAAiB,SAAUC,CAAQ,EACnDD,EAAK,QAAQ,iBAAiB,QAASE,CAAY,EAEnD,SAASA,EAAaC,EAAO,CACvBA,EAAM,OAAO,QAGnB,CAEA,MAAMC,EAAqB,IAAIf,EAE/B,SAASY,EAASI,EAAG,CAOnB,GANAA,EAAE,eAAc,EAChBC,IACAF,EAAmB,MAAQC,EAAE,cAAc,SAAS,MAAM,MAAM,OAEhE,QAAQ,IAAI,8BAA+BD,EAAmB,KAAK,EAE/DA,EAAmB,QAAU,GAAI,CACnCG,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qBACT,SAAU,YACV,MAAO,KACb,CAAK,EAED,MACD,CAEDC,GACF,CAEA,SAASC,EAAqBC,EAAU,CACtC,MAAMC,EAAOD,EAAS,IAAIE,GACjBpB,EAAWoB,CAAO,CAC1B,EACDZ,EAAK,QAAQ,mBAAmB,YAAaW,EAAK,KAAK,EAAE,CAAC,EAE1D,IAAIE,EAAe,aAAc,CAC/B,QAAS,GACT,aAAc,MACd,aAAc,GAClB,CAAG,CACH,CAEA,SAASP,GAAsB,CAC7BN,EAAK,QAAQ,UAAY,EAC3B,CAEA,eAAeQ,GAAgB,CAE7B,GAAI,CACF,MAAME,EAAW,MAAMN,EAAmB,gBAC1CK,EAAqBC,CAAQ,CAC9B,OAAQI,EAAI,CACXC,EAAOD,CAAE,CACV,CACH,CAEA,SAASC,EAAOD,EAAI,CAClB,GAAIA,IAAO,mBAAoB,CAC7BP,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,2EACT,SAAU,YACV,MAAO,KACb,CAAK,EAED,MACD,CAEDA,EAAS,KAAK,CACV,MAAO,QACP,QAAS,iCACT,SAAU,YACV,MAAO,KACb,CAAG,CACH"}